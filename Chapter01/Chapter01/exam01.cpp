// 첫 번째 C++ 프로그램 작성 및 테스트

//#include <iostream>은 iostream이라는 헤더 파일을 포함시키라는 전처리기 (선행처리기)
//iostream 헤더 파일에는 표준 입출력에는 필요한 클래스들과 객체들이 정의가 되어 있다. 
// 따라서 cin 과 cout 와 같은 객체를 사용하려면 반드시 iostream 파일에 포함시켜야 한다. 
#include <iostream>
#include <stdio.h>
//using namespace std; 코드는 c++프로그램에서 변수의 이름이나 함수의 이름과 같은 수많은 
//이름(식별자)들이 사용되고 이들 이름들은 이름 공간 (name space)라고 하는 영역으로 분리되어
//저장되어 있다. 
//c++에서 이름을 사용할 때에는 반드시 "공간::이름"과 같이 공간명을 이름 앞에 붙여야 한다. 
//출력을 담당하는 객체인 cout은 std라고 하는 이름 공간에 속한다. 
//따라서 cout은 원칙적으로 std::cout << "문자열" << std:endl; 
//매번 std를 붙이는 것이 번거롭다. 이런 경우에 사용할 수 있는 것이 바로 using이라는 지시어이다. 


using namespace std;

int main(void) //main은 함수명, int는 return값, ()안에는 매개변수
{	

	//endl(end of line) 줄의 끝을 의미하고 개행을 시켜준다. (\n)
	//cout 콘솔 화면에 데이터를 출력하는 작업을 맡은 객체
	//어떠한 데이터도 << 연산자를 사용하여 출력할 수 있다. 
	//한 줄에 여러 개의 << 연산자를 사용해도 무방하다.  출력은 왼쪽에서 오른쪽으로 출력됨
	cout << "10" << "개의 사과가 있습니다.\n" << endl;
	cout << "a\n";
	cout << "Hello World - C++" << endl;

	printf("Hello World - C\n");
	return 0;
}

//운영체제가 프로그램을 CPU에게 실행하게끔 스케쥴에 올려주고, CPU가 작업큐에서 
//이 프로그램을 실행하게 되는 것이다. 
//0이 정수값이고 리턴값이 int로 되어 있기 때문에 0을 준다
//보통 0의 값은 프로그램이 정상적으로 프로그램을 종료하게끔 해준다 .

//C언어도 Cpp에서도 사용가능 하다. 

//Ctrl + Shift + A : 새 항목 파일 만드는 단축키
//Ctrl + F5 : 디버깅 하지 않고 바로 실행
//Ctrl + Shift + / : 주석 처리 및 주석 처리 풀기
